/**
 *  Copyright 2005-2016 Red Hat, Inc.
 *
 *  Red Hat licenses this file to you under the Apache License, version
 *  2.0 (the "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 *  implied.  See the License for the specific language governing
 *  permissions and limitations under the License.
 */
package com.raytheon.malware.integration;

import com.raytheon.malware.integration.idGenerator.TidGenerator;
import org.apache.camel.builder.RouteBuilder;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.ImportResource;
import org.springframework.stereotype.Component;
import org.apache.camel.model.rest.RestBindingMode;

import java.util.UUID;
import java.util.function.Supplier;

/**
 * A spring-boot application that includes a Camel route builder to setup the Camel routes
 */
@Component
public class MockService extends RouteBuilder {

    @Override
    public void configure() throws Exception {
     	restConfiguration()
     		.component("undertow")
     		.port("8435");
     		//.bindingMode(RestBindingMode.json)
     		
     	//for testing Unzip
        rest("/unzip")
    		.put().produces("application/json")
    		.to("direct:unzip");
        
        from("direct:unzip")
     		.log("POST received for /unzip with body ${body}")
     		.to("language:constant:resource:classpath:unzip-response.json");
  
     	//for testing Hash
        rest("/create_hashes")
    		.put().produces("application/json")
    		.to("direct:hash");
        
        from("direct:hash")
     		.log("POST received for /hash with body ${body}")
     		.to("language:constant:resource:classpath:hash-response.json");
  
        // mock tid generator 
        rest("/tid")
			.get().produces("application/json")
			.to("direct:tid");

        from("direct:tid")
                .bean(TidGenerator.class, "getMultiTids")
            .log(">>> ${body}");
     		
        // Mock Cuckoo endpoint to simulate send for file analysis 
		rest("/tasks/create/file")
			.post().produces("application/json")
			.to("direct:cuckoo");
		 
        from("direct:cuckoo")
     		.log("POST received for /tasks/create/file with body ${body}")
     		.to("language:constant:resource:classpath:cuckoo-analyze-response.json");
	        
    }
}
